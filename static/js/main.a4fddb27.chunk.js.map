{"version":3,"sources":["components/ImagesCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["ImagesCard","props","className","value","id","onClick","clickedImage","alt","name","src","image","Wrapper","children","Title","score","highScore","message","App","state","SWImages","gameOver","setState","forEach","clicked","shuffle","array","i","length","j","Math","floor","random","find","index","console","log","this","map","SWImage","key","Component","ReactDOM","render","document","getElementById"],"mappings":"6jEAeeA,G,MAZI,SAAAC,GAAK,OACtB,yBACEC,UAAU,OACVC,MAAOF,EAAMG,GACbC,QAAS,kBAAMJ,EAAMK,aAAaL,EAAMG,MAExC,yBAAKF,UAAU,iBACb,yBAAKK,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,Y,MCHxBC,MAJf,SAAiBV,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMW,W,MCe1BC,MAhBf,SAAeZ,GACb,OACE,6BACE,yBAAKC,UAAU,cACb,wBAAIA,UAAU,SAAd,yBACA,4BACG,IADH,UAEUD,EAAMa,MAFhB,kBAEsCb,EAAMc,UAAW,KAEvD,4BAAKd,EAAMe,UAEZf,EAAMW,W,OCgEEK,E,2MAvEbC,MAAQ,CACNJ,MAAO,EACPC,UAAW,EACXC,QAAS,kEACTG,Y,EAEFC,SAAW,WAST,OARI,EAAKF,MAAMJ,MAAQ,EAAKI,MAAMH,WAChC,EAAKM,SAAS,CAAEN,UAAW,EAAKG,MAAMJ,QAExC,EAAKO,SAAS,CAAEL,QAAS,qBACzB,EAAKK,SAAS,CAAEP,MAAO,IACvB,EAAKI,MAAMC,SAASG,SAAQ,SAAAZ,GAC1BA,EAAMa,SAAU,MAEX,G,EAKTC,QAAU,SAAAC,GACR,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAK3C,OAAOH,G,EAGTnB,aAAe,SAAAF,GACb,EAAKc,MAAMC,SAASa,MAAK,SAACtB,EAAOuB,GAC/B,GAAIvB,EAAMN,KAAOA,EACf,OAAgC,IAA5Be,EAASc,GAAOV,SAClBJ,EAASc,GAAOV,SAAU,EAE1B,EAAKC,QAAQ,EAAKN,MAAMC,UACxB,EAAKE,SAAS,CAAEP,MAAO,EAAKI,MAAMJ,MAAQ,IAC1C,EAAKO,SAAS,CAAEL,QAAS,wCAClB,IAEPkB,QAAQC,IAAI,YACL,EAAKf,gB,wEAOV,IAAD,OAEP,OADAc,QAAQC,IAAIC,KAAKlB,MAAMC,UAErB,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEL,MAAOsB,KAAKlB,MAAMJ,MAClBC,UAAWqB,KAAKlB,MAAMH,UACtBC,QAASoB,KAAKlB,MAAMF,UAGrBoB,KAAKlB,MAAMC,SAASkB,KAAI,SAAAC,GAAO,OAC9B,kBAAC,EAAD,CACElC,GAAIkC,EAAQlC,GACZmC,IAAKD,EAAQlC,GACbM,MAAO4B,EAAQ5B,MACfJ,aAAc,EAAKA,uB,GAhEbkC,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a4fddb27.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst ImagesCard = props => (\r\n  <div\r\n    className=\"card\"\r\n    value={props.id}\r\n    onClick={() => props.clickedImage(props.id)}\r\n  >\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ImagesCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"title-cont\">\r\n        <h1 className=\"title\">Star Wars Clicky Game</h1>\r\n        <h2>\r\n          {\" \"}\r\n          Score: {props.score} | High Score: {props.highScore}{\" \"}\r\n        </h2>\r\n        <h2>{props.message}</h2>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport ImagesCard from \"./components/ImagesCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport SWImages from \"./starWarsLinks.json\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    score: 0,\r\n    highScore: 0,\r\n    message: \"Click an Image to Begin.  Don't click on the same image twice!!\",\r\n    SWImages\r\n  };\r\n  gameOver = () => {\r\n    if (this.state.score > this.state.highScore) {\r\n      this.setState({ highScore: this.state.score });\r\n    }\r\n    this.setState({ message: \"Sorry. You Lost.\" });\r\n    this.setState({ score: 0 });\r\n    this.state.SWImages.forEach(image => {\r\n      image.clicked = false;\r\n    });\r\n    return true;\r\n  };\r\n  // Counter\r\n  //high score\r\n  // shuffle\r\n  shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  clickedImage = id => {\r\n    this.state.SWImages.find((image, index) => {\r\n      if (image.id === id) {\r\n        if (SWImages[index].clicked === false) {\r\n          SWImages[index].clicked = true;\r\n          // console.log(SWImages[index]);\r\n          this.shuffle(this.state.SWImages);\r\n          this.setState({ score: this.state.score + 1 });\r\n          this.setState({ message: \"Keep Clicking.  You're Doing Great\" });\r\n          return true;\r\n        } else {\r\n          console.log(\"you lose\");\r\n          return this.gameOver();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    console.log(this.state.SWImages);\r\n    return (\r\n      <Wrapper>\r\n        <Title\r\n          score={this.state.score}\r\n          highScore={this.state.highScore}\r\n          message={this.state.message}\r\n        />\r\n\r\n        {this.state.SWImages.map(SWImage => (\r\n          <ImagesCard\r\n            id={SWImage.id}\r\n            key={SWImage.id}\r\n            image={SWImage.image}\r\n            clickedImage={this.clickedImage}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}